replicaCount: 1

image:
  repository: cs3org/revad
  tag: v1.18.0
  pullPolicy: Always

service:
  type: ClusterIP
  grpc:
    port: 19000
  http:
    port: 19001

extraVolumeMounts: []
extraVolumes: []

emptyDir:
  sizeLimit: ""

persistentVolume:
  ## If true, revad will create/use a Persistent Volume Claim
  ## If false, use emptyDir
  enabled: false

  ## Must match those of existing PV or dynamic provisioner
  ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  accessModes:
    - ReadWriteOnce

  annotations: {}

  ## If defined, PVC MUST be created manually before volume will be bound
  existingClaim: ""

  mountPath: /var/tmp/reva
  ## Subdirectory of the PV to mount. If the root directory is not empty
  subPath: ""
  size: 2Gi

  ## If set to "-", storageClassName: "": disables dynamic provisioning
  ## If undefined or null, chooses the default provisioner.
  # storageClass: "-"

  # volumeBindingMode: ""

## Environment variables in NAME:VALUE (dict) form
env: {}
  # REVA_ENV: value

## Environment variables in {name,value/valueFrom} (list) form
extraEnv: []
  # - name: REVA_ENV
  #   value: value
  # - name: REVA_ENV_FROM
  #   valueFrom:
  #     configMapKeyRef:
  #       name: configmap
  #       key: configmap_key
  # - name: REVA_SECRET_ENV
  #   valueFrom:
  #     secretKeyRef:
  #       name: secret
  #       key: secret_key

envFrom: []
  # - configMapRef:
  #     name: reva-envars
  # - secretRef:
  #     name: reva-secrets

ingress:
  enabled: false
  services:
    http:
      hostname: http.revad.local
      path: /
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # nginx.ingress.kubernetes.io/ssl-redirect: "true"
      tls: []
        # Secrets must be present in the namespace beforehand.
        # - secretName: http-revad-tls
        #   hosts:
        #     - http.revad.local
    grpc:
      hostname: grpc.revad.local
      path: /
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # nginx.ingress.kubernetes.io/ssl-redirect: "true"
        # nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
      tls: []
        # - secretName: grpc-revad-tls
        #   hosts:
        #     - grpc.revad.local

# https://reva.link/docs/config/
configFiles:
  revad.toml: |
    [grpc.services.gateway]
    [grpc.services.storageregistry]
    [grpc.services.storageprovider]
    [grpc.services.authprovider]
    [grpc.services.authregistry]
    [grpc.services.userprovider]
    [grpc.services.groupprovider]
    [grpc.services.usershareprovider]
    [grpc.services.publicshareprovider]
    [grpc.services.ocmcore]
    [grpc.services.ocmshareprovider]
    [grpc.services.ocminvitemanager]
    [grpc.services.ocmproviderauthorizer]

    [http.services.datagateway]
    [http.services.dataprovider]
    [http.services.prometheus]
    [http.services.ocmd]
    [http.services.ocdav]
    [http.services.ocs]

  users.json: |
    [
      {
        "id": {
          "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
          "idp": "localhost:19000"
        },
        "username": "einstein",
        "secret": "relativity",
        "mail": "einstein@example.org",
        "display_name": "Albert Einstein",
        "groups": ["sailing-lovers", "violin-haters", "physics-lovers"]
      },
      {
        "id": {
          "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
          "idp": "localhost:19000"
        },
        "username": "marie",
        "secret": "radioactivity",
        "mail": "marie@example.org",
        "display_name": "Marie Curie",
        "groups": ["radium-lovers", "polonium-lovers", "physics-lovers"]
      },
      {
        "id": {
          "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
          "idp": "localhost:19000"
        },
        "username": "richard",
        "secret": "superfluidity",
        "mail": "richard@example.org",
        "display_name": "Richard Feynman",
        "groups": ["quantum-lovers", "philosophy-haters", "physics-lovers"]
      }
    ]

  groups.json: |
    [
      {
        "id": {
          "opaque_id": "sailing-lovers",
          "idp": "localhost:19000"
        },
        "group_name": "sailing-lovers",
        "mail": "sailing-lovers@example.org",
        "display_name": "Sailing Lovers",
        "gid_number": 123,
        "members": [
          {
            "id": {
              "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
              "idp": "localhost:19000"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "violin-haters",
          "idp": "localhost:19000"
        },
        "group_name": "violin-haters",
        "mail": "violin-haters@example.org",
        "display_name": "Violin Haters",
        "gid_number": 456,
        "members": [
          {
            "id": {
              "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
              "idp": "localhost:19000"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "radium-lovers",
          "idp": "localhost:19000"
        },
        "group_name": "radium-lovers",
        "mail": "radium-lovers@example.org",
        "display_name": "Radium Lovers",
        "gid_number": 789,
        "members": [
          {
            "id": {
              "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
              "idp": "localhost:19000"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "polonium-lovers",
          "idp": "localhost:19000"
        },
        "group_name": "polonium-lovers",
        "mail": "polonium-lovers@example.org",
        "display_name": "Polonium Lovers",
        "gid_number": 987,
        "members": [
          {
            "id": {
              "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
              "idp": "localhost:19000"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "quantum-lovers",
          "idp": "localhost:19000"
        },
        "group_name": "quantum-lovers",
        "mail": "quantum-lovers@example.org",
        "display_name": "Quantum Lovers",
        "gid_number": 654,
        "members": [
          {
            "id": {
              "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
              "idp": "localhost:19000"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "philosophy-haters",
          "idp": "localhost:19000"
        },
        "group_name": "philosophy-haters",
        "mail": "philosophy-haters@example.org",
        "display_name": "Philosophy Haters",
        "gid_number": 321,
        "members": [
          {
            "id": {
              "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
              "idp": "localhost:19000"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "physics-lovers",
          "idp": "localhost:19000"
        },
        "group_name": "physics-lovers",
        "mail": "physics-lovers@example.org",
        "display_name": "Physics Lovers",
        "gid_number": 101,
        "members": [
          {
            "id": {
              "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
              "idp": "localhost:19000"
            }
          },
          {
            "id": {
              "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
              "idp": "localhost:19000"
            }
          },
          {
            "id": {
              "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
              "idp": "localhost:19000"
            }
          }
        ]
      }
    ]

  ocm-providers.json: |
    []
