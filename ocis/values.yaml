## -- Number of ocis replicas to run
replicaCount: 1

image:
  ## -- Image to use for deploying ocis
  repository: gitlab-registry.cern.ch/sciencebox/docker-images/ocis
  ## -- Image tag to use
  tag: 1.20.0
  ## -- Kubernetes Image pull policy
  pullPolicy: Always

services:
  type: ClusterIP
  idp:
    port: 9130
    targetPort: 9130
  proxy:
    port: 443
    targetPort: 9200

extraEnv: []

configFiles:
  identifier_registration.yaml: |
    clients:
      - id: web
        name: ownCloud web app
        trusted: yes
        redirect_uris:
          - https://ocis-idp.local/
          - https://ocis-idp.local/oidc-callback.html
          - https://ocis-idp.local/oidc-silent-redirect.html
        origins:
          - https://ocis-idp.local

persistentVolume:
  ## If true, ocis will create/use a Persistent Volume Claim
  ## If false, use emptyDir instead
  enabled: false

  ## Must match those of existing PV or dynamic provisioner
  ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  accessModes:
    - ReadWriteOnce

  annotations: {}

  ## If defined, PVC MUST be created manually before volume will be bound
  existingClaim: ""

  mountPath: /var/tmp
  ## Subdirectory of the PV to mount. If the root directory is not empty
  subPath: ""
  size: 10Gi

  ## If set to "-", storageClassName: "": disables dynamic provisioning
  ## If undefined or null, chooses the default provisioner.
  # storageClass: "-"

  # volumeBindingMode: ""

emptyDir:
  sizeLimit: ""

resources: {}
  # requests:
  #   cpu: 500m
  #   memory: 512Mi
  #   ephemeral-storage: "2Gi"
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  #   ephemeral-storage: "2Gi"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  hosts:
    - ocis-idp.local
  exposeIdp: true
  exposeLdap: false
  tls: []
  #  - secretName: ocis-tls
  #    hosts:
  #      - ocis.local
  grpc: {}
    # annotations: {}
    # hosts:
    #   - api.cernbox.cern.ch
    # tls: []
